%# BEGIN LICENSE BLOCK
%# 
%# Copyright (c) 1996-2002 Jesse Vincent <jesse@bestpractical.com>
%# 
%# (Except where explictly superceded by other copyright notices)
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# 
%# Unless otherwise specified, all modifications, corrections or
%# extensions to this work which alter its source code become the
%# property of Best Practical Solutions, LLC when submitted for
%# inclusion in the work.
%# 
%# 
%# END LICENSE BLOCK
<& /Elements/ListActions, actions => \@actions &>

<FORM METHOD=GET ACTION="Workflows.html">
<INPUT TYPE="Hidden" NAME="id" VALUE="<%$id%>">

% if ($Workflows->Count == 0 ) {
<P><i><&|/l&>(No workflows)</&></i></P>
% } else {
<TABLE>
<TR>
<TH>
<i><&|/l&>(Check box to delete)</&></i>
</TH>
<TH>
</TH>
</TR>
% my $count;
% while (my $WorkflowObj = $Workflows->Next) { 
% next unless $WorkflowObj->Content =~ /^===Create-Ticket:/m;
<TR>
<TD>
<input type="checkbox" name="DeleteWorkflow-<%$WorkflowObj->Id%>">
</TD>
<TD>
<A HREF="Workflow.html?Queue=<%$id%>&Workflow=<%$WorkflowObj->id()%>">
<B><% loc($WorkflowObj->Name) %></B></A>
<br><% loc($WorkflowObj->Description) %>
</TD>
</TR>

% }
</TABLE>
% }

<& /Elements/Submit &>
</FORM>

<%INIT>
my $Workflows = RT::Templates->new($session{'CurrentUser'});
my $QueueObj = RT::Queue->new($session{'CurrentUser'});
my @actions;

if ($id)  {
        $QueueObj->Load($id);                        
}

if ($QueueObj->id) {
	$Workflows->LimitToQueue($id);
}                                            
else {                                       
        $Workflows->LimitToGlobal();
}                                           

# Now let callbacks add their extra limits
$m->comp('/Elements/Callback', Workflows => $Workflows, %ARGS);

# {{{ deal with deleting existing templates
foreach my $key (keys %ARGS) {
  # {{{ if we're trying to delete the template
  if ($key =~ /^DeleteWorkflow-(\d+)/) {
    my $id = $1;
    my $WorkflowObj = RT::Template->new($session{'CurrentUser'});
    $WorkflowObj->Load($id);
    my ($retval, $msg) = $WorkflowObj->Delete;
    if ($retval) {
      push @actions, loc("Workflow deleted");
    }
    else {
      push @actions, $msg;
    }
  }
  # }}}
}
# }}}
</%INIT>
<%ARGS>
$id => 0
$title => undef
$Move => undef
$Source => undef
$Workflow => undef
</%ARGS>
